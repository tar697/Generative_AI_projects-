# -*- coding: utf-8 -*-
"""ai-image-caption-generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/tar697/29709451c96d8e37825b45803a157a8c/ai-image-caption-generator.ipynb

#**Project Description**: This project automatically generates engaging, human-like captions for images or AI-generated images.
"""

# Install dependencies
!pip install -q streamlit pyngrok transformers torch torchvision pillow

# Write the Streamlit app to app.py

with open("app.py", "w") as f:
    f.write('''

import streamlit as st
from PIL import Image, ImageDraw, ImageFont
import torch
from transformers import BlipProcessor, BlipForConditionalGeneration
import io

# Page setup
st.set_page_config(page_title="AI Art Caption Generator", layout="centered")
st.title("🎨 AI Art Caption Generator")
st.write("Upload an image and let AI generate a creative caption for it using the BLIP model.")

# Load model and processor
@st.cache_resource
def load_model():
    processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base", use_fast=True)
    model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")
    model.eval()
    return processor, model

processor, model = load_model()

# Select caption style
caption_style = st.selectbox("🎭 Select Caption Style", ["Descriptive", "Poetic", "Funny", "Mystical"])

# Upload image
uploaded_file = st.file_uploader("📤 Upload an image (JPG or PNG)", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded Image", use_column_width=True)

    if st.button("✨ Generate Caption"):
        with st.spinner("Generating caption..."):
            inputs = processor(images=image, return_tensors="pt")
            out = model.generate(**inputs)
            caption = processor.decode(out[0], skip_special_tokens=True)

            if caption_style == "Poetic":
                styled_caption = f"✨ In hues of dreams: {caption}"
            elif caption_style == "Funny":
                styled_caption = f"😂 When your brush has a sense of humor: {caption}"
            elif caption_style == "Mystical":
                styled_caption = f"🔮 A vision from another realm: {caption}"
            else:
                styled_caption = f"🖼️ {caption}"

            st.success("Caption Generated!")
            st.markdown(f"### 📝 Caption: \\n> {styled_caption}")

            draw = ImageDraw.Draw(image)
            font = ImageFont.load_default()
            draw.text((10, 10), styled_caption, font=font, fill="white")

            buf = io.BytesIO()
            image.save(buf, format="PNG")
            byte_im = buf.getvalue()

            st.download_button(
                label="📥 Download Image with Caption",
                data=byte_im,
                file_name="captioned_image.png",
                mime="image/png"
            )
''')

# Authenticates ngrok client with ngrok account using personal authtoken

!ngrok config add-authtoken 2ywfVy7ARGbuCbtqlCs4A1aaGDj_3Nf5r85iye654zHNZNuFu

# ✅ Start ngrok tunnel and run Streamlit
from pyngrok import ngrok
public_url = ngrok.connect(8501, proto="http")
print("🚀 Streamlit app is live at:", public_url)

!streamlit run app.py &>/content/logs.txt &